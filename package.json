{
  "name": "@serlo/api.serlo.org-workspace",
  "version": "0.0.0",
  "private": true,
  "bugs": {
    "url": "https://github.com/serlo/api.serlo.org/issues"
  },
  "type": "module",
  "repository": "serlo/api.serlo.org",
  "license": "Apache-2.0",
  "author": "Serlo Education e.V.",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "_eslint": "eslint \"{{__fixtures__,__tests-pacts__,__tests__,scripts,packages/*/src}/**/*,*}.{js,jsx,ts,tsx}\"",
    "_prettier": "prettier .",
    "auth": "scripts/authenticate.sh",
    "_build": "node --loader ts-node/esm --experimental-specifier-resolution=node scripts/build",
    "_jest": "node --no-warnings --experimental-vm-modules --experimental-specifier-resolution=node node_modules/jest/bin/jest.js",
    "_start": "node --loader ts-node/esm --experimental-specifier-resolution=node scripts/start",
    "build:server": "yarn _build packages/server/src/server.ts server.cjs",
    "build:swr-queue-worker": "yarn _build packages/server/src/swr-queue-worker.ts swr-queue-worker.cjs",
    "build:packages": "yarn lerna run build",
    "check:all": "scripts/run_all_checks.sh",
    "check:unused-dependencies": "depcheck",
    "check:unused-exports": "ts-unused-exports tsconfig.json --excludePathsFromReport=packages/types/ --excludePathsFromReport=packages/server/src/types.ts --ignoreFiles=/dist/",
    "codegen": "lerna run --stream codegen",
    "deploy:images:staging": "lerna run --stream deploy:image:staging --",
    "deploy:images:production": "lerna run --stream deploy:image:production --",
    "docker:build": "run-s \"docker:build:*\"",
    "docker:build:server": "docker build -f packages/server/docker/server/Dockerfile -t api-server-local-build:latest .",
    "docker:build:swr-queue-worker": "docker build -f packages/server/docker/swr-queue-worker/Dockerfile -t api-swr-queue-worker-local-build:latest .",
    "docker:rm": "run-p --continue-on-error --print-label \"docker:rm:*\" ",
    "docker:rm:server": "docker image rm api-server-local-build",
    "docker:rm:swr-queue-worker": "docker image rm api-swr-queue-worker-local-build",
    "docker:run": "run-p --print-label \"docker:run:*\"",
    "docker:run:server": "docker run -p 3001:3001 -d --env-file .env --env-file .env-docker --add-host=host.docker.internal:host-gateway --name api-server-from-local-build api-server-local-build",
    "docker:run:swr-queue-worker": "docker run -p 3030:3000 -d --env-file .env --env-file .env-docker --add-host=host.docker.internal:host-gateway --name api-swr-queue-worker-from-local-build api-swr-queue-worker-local-build",
    "docker:stop": "run-p --continue-on-error --print-label \"docker:stop:*\"",
    "docker:stop:server": "docker stop api-server-from-local-build && docker container rm api-server-from-local-build",
    "docker:stop:swr-queue-worker": "docker stop api-swr-queue-worker-from-local-build && docker container rm api-swr-queue-worker-from-local-build",
    "down": "docker compose -f docker-compose.sso.yml -f docker-compose.kratos.yml -f docker-compose.yml down",
    "format": "npm-run-all -c \"format:*\"",
    "format:eslint": "yarn _eslint --fix",
    "format:prettier": "yarn _prettier --write",
    "format:prettier:staged": "prettier --write $(git diff --name-only --cached)",
    "kratos:rebuild": "docker compose -f docker-compose.kratos.yml up -d --force-recreate --no-deps --build kratos",
    "lint": "npm-run-all --parallel lint:prettier lint:tsc lint:eslint",
    "lint:eslint": "yarn _eslint",
    "lint:prettier": "yarn _prettier --check",
    "lint:tsc": "tsc --noEmit",
    "migrate:new": "lerna run --stream new",
    "migrate:run": "packages/db-migrations/scripts/run_migrations.sh",
    "migrate:all": "lerna run --stream migrate:all",
    "migrate:up": "lerna run --stream migrate:up",
    "postgres": "docker compose -f docker-compose.kratos.yml exec postgres  psql -U serlo -d kratos",
    "postgres:dump": "docker compose -f docker-compose.kratos.yml exec postgres pg_dump --clean --if-exists kratos --user serlo > kratos/postgres/001-init.sql",
    "postgres:import-anonymous-data": "./scripts/postgres-import-anonymous-data.sh",
    "postgres:rollback": "docker compose -f docker-compose.kratos.yml exec postgres bash -c 'psql -U serlo kratos < /docker-entrypoint-initdb.d/001-init.sql'",
    "redis:cli": "docker compose exec redis redis-cli",
    "redis:empty": "docker compose exec redis redis-cli FLUSHDB",
    "redis:list": "docker compose exec redis redis-cli KEYS '*'",
    "start": "run-s start:containers start:server",
    "start:enmeshed": "docker-compose -f enmeshed/docker-compose.yml up -d",
    "start:containers": "docker compose up --detach",
    "start:kratos": "docker compose -f docker-compose.kratos.yml up --detach",
    "start:sso": "docker compose -f docker-compose.sso.yml up --detach",
    "start:server": "yarn _start packages/server/src/server.ts server.cjs",
    "start:swr-queue-worker": "yarn _start packages/server/src/swr-queue-worker.ts swr-queue-worker.cjs",
    "stop": "docker compose -f docker-compose.sso.yml -f docker-compose.kratos.yml -f docker-compose.yml stop",
    "stop:enmeshed": "docker-compose -f enmeshed/docker-compose.yml down",
    "test": "yarn _jest --config jest.config.js --forceExit",
    "test:docker:server": "run-s \"test:docker:server:*\"",
    "test:docker:server:playground": "curl --verbose http://localhost:3001/___graphql | grep '<title>GraphQL Playground</title>'",
    "test:docker:server:graphql": "curl --verbose -H 'Content-type: application/json' --data '{\"query\": \"query { version }\" }' http://localhost:3001/graphql",
    "test:docker:swr-queue-worker": "curl --verbose http://localhost:3030/.well-known/health | grep OK",
    "mysql": "docker compose exec mysql serlo-mysql",
    "mysql:import-anonymous-data": "./scripts/mysql/import-anonymous-data.sh",
    "mysql:rollback": "docker compose exec mysql sh -c \"pv /docker-entrypoint-initdb.d/001-init.sql | serlo-mysql\"",
    "start:docker": "docker compose up --detach",
    "stop:docker": "docker compose down"
  },
  "dependencies": {
    "graphql": "^16.8.1"
  },
  "devDependencies": {
    "@luckycatfactory/esbuild-graphql-loader": "^3.8.1",
    "@tsconfig/node20": "^20.1.4",
    "@types/jest": "^29.5.12",
    "@types/node": "^18.19.33",
    "@typescript-eslint/eslint-plugin": "^7.8.0",
    "@typescript-eslint/parser": "^7.8.0",
    "default-import": "^1.1.5",
    "depcheck": "^1.4.7",
    "esbuild": "^0.21.1",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-react": "^7.34.1",
    "graphql-tag": "^2.12.6",
    "jest": "^29.7.0",
    "jest-transform-graphql": "^2.1.0",
    "lerna": "^8.1.2",
    "msw": "^2.3.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.2.5",
    "prettier-plugin-packagejson": "^2.5.0",
    "prettier-plugin-sh": "^0.14.0",
    "ts-node": "^10.9.2",
    "ts-unused-exports": "^10.0.1",
    "tsdx": "^0.14.1",
    "typescript": "^5.4.5"
  },
  "packageManager": "yarn@3.6.1",
  "engines": {
    "node": "^20.0.0"
  }
}
