type Page implements AbstractUuid & AbstractRepository & AbstractEntity & AbstractTaxonomyTermChild & InstanceAware & ThreadAware {
  id: Int!
  trashed: Boolean!
  threads(
    after: String
    first: Int
    archived: Boolean
    trashed: Boolean
  ): ThreadConnection!
  date: DateTime!
  instance: Instance!
  alias: String!
  title: String!
  licenseId: Int!
  currentRevision: PageRevision
  revisions(
    after: String
    first: Int
    unrevised: Boolean
  ): PageRevisionConnection!
  taxonomyTerms(after: String, first: Int): TaxonomyTermConnection!
}

type PageRevision implements AbstractUuid & AbstractRevision & AbstractEntityRevision & ThreadAware {
  id: Int!
  author: User!
  trashed: Boolean!
  alias: String!
  threads(
    after: String
    first: Int
    archived: Boolean
    trashed: Boolean
  ): ThreadConnection!
  date: DateTime!
  title: String!
  content: String!
  repository: Page!
  changes: String!
  metaTitle: String
  metaDescription: String
  url: String
}

type PageRevisionConnection implements AbstractEntityRevisionConnection {
  nodes: [PageRevision!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

extend type Query {
  page: PageQuery!
}

type PageQuery {
  pages(instance: Instance): [Page!]!
}
