extend type Query {
  subscription: SubscriptionQuery!
}

extend type Mutation {
  subscription: SubscriptionMutation!
}

type SubscriptionQuery {
  currentUserHasSubscribed(id: Int!): Boolean!
  getSubscriptions(
    after: String
    before: String
    first: Int
    last: Int
  ): SubscriptionInfoConnection!
}

type SubscriptionInfoConnection {
  edges: [SubscriptionCursor!]!
  nodes: [SubscriptionInfo!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SubscriptionCursor {
  cursor: String!
  node: SubscriptionInfo!
}

type SubscriptionInfo {
  object: AbstractUuid!
  sendEmail: Boolean!
}

type SubscriptionMutation {
  set(input: SubscriptionSetInput!): DefaultResponse!
}

input SubscriptionSetInput {
  id: [Int!]!
  subscribe: Boolean!
  sendEmail: Boolean!
}
